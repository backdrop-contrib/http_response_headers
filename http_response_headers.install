<?php
/**
 * @file
 * Install, update and uninstall functions for the HTTP response headers module.
 */

/**
 * Implements hook_schema().
 */
function http_response_headers_schema() {
  $schema['cache_http_response_headers'] = backdrop_get_schema_unprocessed('system', 'cache');
  return $schema;
}

/**
 * Implements hook_update_last_removed().
 */
function http_response_headers_update_last_removed() {
  return 7001;
}

/**
 * Migrate http_response_headers settings variables to config.
 */
function http_response_headers_update_1000() {
  $config = config('http_response_headers.settings');
  $config->set('allowed_headers', update_variable_get('http_response_headers_allowed_headers', ''));
  $config->set('exclude_pages', update_variable_get('http_response_headers_exclude_pages', ''));
  $config->set('additional_headers', update_variable_get('http_response_headers_additional_headers', array()));
  $config->save();

  update_variable_del('http_response_headers_allowed_headers');
  update_variable_del('http_response_headers_exclude_pages');
  update_variable_del('http_response_headers_additional_headers');
}

/**
 * Migrate http_response_headers rules from db to config.
 */
function http_response_headers_update_1001() {
  $config = config('http_response_headers.settings');
  $rules = db_query('
    SELECT *
    FROM {http_response_headers}
    ')
    ->fetchAllAssoc('machine_name', PDO::FETCH_ASSOC);
  foreach ($rules as &$rule) {
    unset($rule['rid']);
    unset($rule['machine_name']);
    unset($rule['data']);
    // Two roles have new keys, so should be replaced.
    if (!empty($rule['roles'])) {
      $roles = backdrop_map_assoc(explode(',', $rule['roles']));
      $role_map = array(
        1 => 'anonymous',
        2 => 'authenticated',
      );
      $roles = array_values(array_replace($roles, $role_map));
      $rule['roles'] = implode(',', $roles);
    }
  }
  $config->set('rules', $rules);
  $config->save();
}

/**
 * Drop the http_response_headers db table that's no longer needed.
 */
function http_response_headers_update_1002() {
  // This is in a separate update function in case a module needs to read some
  // of the data that we're throwing away when we drop the tables.
  db_drop_table('http_response_headers');
}
