<?php

/**
 * @file
 * Tests for http_response_headers.module.
 */

class HttpResponseHeadersTestCase extends DrupalWebTestCase {
  protected $adminUser;

  /**
   * @return array
   */
  public static function getInfo() {
    return array(
      'name' => 'Http Response Header functionality',
      'description' => 'Add, edit and delete HTTP header rule.',
      'group' => 'System',
    );
  }

  /**
   * @return bool|void
   */
  function setUp() {
    parent::setUp('http_response_headers');

    // Create and log in an administrative user.
    $this->adminUser = $this->drupalCreateUser(array(
      'administer http response headers',
      'access administration pages',
    ));
    $this->drupalLogin($this->adminUser);

    // Set up default header list on configuration page.
    $this->setupDefaultConfiguration();
  }

  /**
   *
   */
  protected function setupDefaultConfiguration() {
    $edit['http_response_headers_allowed_headers[]'] = array (
      'Cache-Control' => 'Cache-Control',
      'Expires' => 'Expires',
      'X-Frame-Options' => 'X-Frame-Options',
    );

    $this->drupalPost('admin/config/system/http-response-headers/settings', $edit, t('Save configuration'));
  }

  /**
   * Test creating header rule.
   */
  function testHeaderRuleAdminUI() {

    // Confirm that the add rule link appears on header rule overview pages.
    $this->drupalGet('admin/config/system/http-response-headers');
    $this->assertRaw(l('Add a HTTP header rule', 'admin/config/system/http-response-headers/add'), 'Add header rule link is present on overview page.');


    // Add a new header rule by filling out the input
    // form on the admin/config/system/http-response-headers/add page.
    $header_rule['name'] = $this->randomName(8);
    $header_rule['rule_id'] = strtolower($header_rule['name']);
    $header_rule['header'] = 'Cache-Control';
    $header_rule['header_value'] = 600;
    $header_rule['pages'] = 'node/*';
    $header_rule['visibility'] = HTTP_RESPONSE_HEADERS_VISIBILITY_LISTED;
    $header_rule['types[article]'] = 'article';
    $this->drupalPost('admin/config/system/http-response-headers/add', $header_rule, t('Save rule'));

    // Confirm that the header rule has been created, and then
    // query the created rule_id.
    $this->assertText(t('The header rule has been created.'), 'Header rule successfully created.');
    $rule_id = db_query("SELECT rule_id FROM {http_response_headers} WHERE name = :name", array(':name' => $header_rule['name']))->fetchField();

    // Check to see if the header rule was created by checking
    // that it's in the database.
    $this->assertNotNull($rule_id, 'Header rule found in database');

    // Check that http_response_headers_load() returns
    // the correct name and content.
    $data = http_response_headers_load($rule_id);
    $this->assertEqual($header_rule['header_value'], $data->header_value, 'http_response_headers_load() provides correct header details.');

    // Verify presence of configure and delete links for header rule.
    $this->drupalGet('admin/config/system/http-response-headers');
    $this->assertLinkByHref('admin/config/system/http-response-headers/' . $rule_id . '/configure', 0, 'Header rule configure link found.');
    $this->assertLinkByHref('admin/config/system/http-response-headers/' . $rule_id . '/delete', 0, 'Header rule delete link found.');

    // Set visibility only for authenticated users, to verify delete functionality.
    $edit = array();
    $edit['roles[' . DRUPAL_AUTHENTICATED_RID . ']'] = TRUE;
    $this->drupalPost('admin/config/system/http-response-headers/' . $rule_id . '/configure', $edit, t('Save rule'));

    // Delete the created header rule  & verify that it's been deleted
    // and no longer applying on the page.
    $this->clickLink(t('delete'));
    $this->drupalPost('admin/config/system/http-response-headers/' . $rule_id . '/delete', array(), t('Delete'));
    $this->assertRaw(t('The header rule %name has been deleted.', array('%name' => $header_rule['name'])), 'Header rule successfully deleted.');
    $this->assertNoRaw(t($header_rule['rule_id']), 'Header rule no longer appears on page.');
    $count = db_query("SELECT 1 FROM {http_response_headers} WHERE name = :name", array(':name' => $header_rule['name']))->fetchField();
    $this->assertFalse($count, 'Table http_response_headers being cleaned.');
  }

}
